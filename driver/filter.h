#pragma once
#include "minidriver.h"
#include "permission.h"

typedef struct _VolumeList
{
	//
	// list entry member
	//
	LIST_ENTRY list;

	/************************************************************************/
	/* our member                                                                     */
	/************************************************************************/
	//
	// volume guid
	//
	UNICODE_STRING GUID;
	WCHAR _GUID_Buffer[GUID_SIZE];

	//
	//  Types
	//  The possible DeviceCharacteristics flags are defined in NTIFS.H.
	//  Potential values are:
	//      FILE_REMOVABLE_MEDIA
	//      FILE_READ_ONLY_DEVICE
	//      FILE_FLOPPY_DISKETTE
	//      FILE_WRITE_ONCE_MEDIA
	//      FILE_REMOTE_DEVICE
	//      FILE_DEVICE_IS_MOUNTED
	//      FILE_VIRTUAL_VOLUME
	//      FILE_AUTOGENERATED_DEVICE_NAME
	//      FILE_DEVICE_SECURE_OPEN
	//
	ULONG type;
}VolumeList, *PVolumeList;

#define FLT_TAG 'Fttg'

typedef enum {
	MsgCode_Null, // null define , for daemon use

	// user
	MsgCode_User_Get,
	MsgCode_User_Login,
	MsgCode_User_Sign,
	MsgCode_User_Logout,

	// file
	MsgCode_Permission_Get,
	MsgCode_Permission_Set,

	// driver
	MsgCode_GetPause,
	MsgCode_SetPause,
}MsgCode, *PMsgCode;

typedef struct _Msg
{
	MsgCode code;

	union
	{
		struct
		{
			PWCHAR path;					// user key file path
			WCHAR  name[PM_NAME_MAX];	// user name
			WCHAR  group[PM_NAME_MAX];	// group name
			WCHAR  password[PM_NAME_MAX];	// password
		}User;

		struct
		{
			PWCHAR path;					// file path
			PermissionCode pmCode;		// permission code
		}File;

		struct
		{
			BOOL * pause;		// store the value of pause
		}Driver;
	}Data;
}Msg, *PMsg;


//
// user filter interface 
//
NTSTATUS oninit(PUNICODE_STRING _regPath);	// call when dirver start
void onexit();		// call when dirver unload
NTSTATUS onstart(PVolumeContext ctx); // call when setup filter on volume
void onstop(PVolumeContext ctx);		// call when stop filter on volme
NTSTATUS onfilter(PFLT_FILE_NAME_INFORMATION info, PUNICODE_STRING guid);// call when filter data on volme
NTSTATUS onmsg(PMsg msg);	// call when user application message in
NTSTATUS sendMsg(MsgCode msg);	// send message to user application
